
using _VGA;
using _PROCESSOR;
using _LAPTOP;
using System.Threading.Channels;

//VGA
namespace _VGA
{
    class Vga
    {
        public string merk;

        public Vga(string merk)
        {
            this.merk = merk;
        }
    }

    class Nvidia : Vga
    {
        public Nvidia() : base("Nvidia")
        {}
    }

    class AMD : Vga
    {
        public AMD() : base("AMD")
        {}
    }

}

//PROCESSOR
namespace _PROCESSOR
{
    class Processor
    {
        public string merk;
        public string tipe;

        public Processor(string merk, string tipe)
        {
            this.merk = merk;
            this.tipe = tipe;
        }
    }

    class Intel : Processor
    {
        public Intel(string tipe) : base("Intel",tipe)
        {}
    }

    class Corei3 : Intel
    {
        public Corei3() : base("Corei3")
        {}
    }

    class Corei5 : Intel
    {
        public Corei5() : base("Corei5")
        {}
    }

    class Corei7 : Intel
    {
        public Corei7() : base("Corei7")
        {}
    }

    class AMD : Processor
    {
        public AMD(string tipe) : base("AMD", tipe)
        {}
    }

    class Ryzen : AMD
    {
        public Ryzen() : base("RAYZEN")
        {}
    }

    class Athlon : AMD
    {
        public Athlon() : base("ATHLON")
        {}
    }
}

//LAPTOP
namespace _LAPTOP
{
    class Laptop
    {
        public string merk;
        public string tipe;
        public Vga vga;
        public Processor processor;

        public Laptop(string merk, string tipe, Vga vga, Processor processor)
        {
            this.merk = merk;
            this.tipe = tipe;
            this.vga = vga;
            this.processor = processor;
        }

        public void LaptopDinyalakan()
        {
            Console.WriteLine("Laptop " + merk + " " + tipe + " menyala");
        }

        public void LaptopDimatikan()
        {
            Console.WriteLine("Laptop " + merk + " " + tipe + " mati");
        }
    }

    class ASUS : Laptop
    {
        public ASUS(string tipe, Vga vga, Processor processor) : base("ASUS", tipe, vga, processor)
        {}
    }

    class ROG : ASUS
    {
        public ROG(Vga vga, Processor processor) : base("ROG", vga, processor)
        {}
    }

    class Vivobook : ASUS
    {
        public Vivobook(Vga vga, Processor processor) : base("Vivobook", vga, processor)
        {}

        public void Ngoding()
        {
            Console.WriteLine("Ctak Ctak Ctak, error lagi!!");
        }
    }

    class ACER : Laptop
    {
        public ACER(string tipe, Vga vga, Processor processor) : base("ACER", tipe, vga, processor)
        {}
    }

    class Swift : ACER
    {
        public Swift(Vga vga, Processor processor) : base("Swift", vga, processor)
        {}
    }

    class Predator : ACER
    {
        public Predator(Vga vga, Processor processor) : base("Predator", vga, processor)
        {}

        public void BermainGame()
        {
            Console.WriteLine("Laptop " + merk + " " + tipe + " sedang memainkan game");
        }
    }

    class Lenovo : Laptop
    {
        public Lenovo(string tipe, Vga vga, Processor processor) : base("Lenovo", tipe, vga, processor)
        {}
    }

    class IdeaPad : Lenovo
    {
        public IdeaPad(Vga vga, Processor processor) : base("IdeaPad", vga, processor)
        {}
    }

    class Legion : Lenovo
    {
        public Legion(Vga vga, Processor processor) : base("Legion", vga, processor)
        {}
    }
}


internal class JalankanKode
{
    static void Main(string[] args)
    {
        Vga vgalaptop1 = new Nvidia();
        Processor prolaptop1 = new Corei5();
        Laptop laptop1 = new Vivobook(vgalaptop1, prolaptop1);

        //SOAL 3
        Console.WriteLine("Spesifikasi Laptop1");
        Console.WriteLine("Vga : " + laptop1.vga.merk);
        Console.WriteLine("Processor : " + laptop1.processor.merk + " " + laptop1.processor.tipe);

        //SOAL2
        laptop1.Ngoding(); //error

        Vga vgalaptop2 = new _VGA.AMD();
        Processor prolaptop2 = new Ryzen();
        Laptop laptop2 = new IdeaPad(vgalaptop2, prolaptop2);

        //SOAL 1
        laptop2.LaptopDinyalakan();
        laptop2.LaptopDimatikan();

        Vga vgapredator = new _VGA.AMD();
        Processor propredator = new Corei7();
        Predator predator = new Predator(vgapredator, propredator);

        //SOAL 4
        predator.BermainGame();

        //SOAL 5
        ACER acer = new Predator(vgapredator, propredator);
        acer.BermainGame(); //error
    }
}
